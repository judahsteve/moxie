class Medspa(models.Model):
    name = models.CharField(max_length=100)
    address = models.TextField()
    phone_number = models.CharField(max_length=13,unique=True)
    email = models.CharField(max_length=50,unique=True)

    class Meta:
        db_table = "medspas"


class Appointment(models.Model):
    medspa = models.ForeignKey("medspa.MedSpa",on_delete=models.CASCADE)
    start_date = models.DateField()
    start_time = models.TimeField()
    total_duration = models.IntegerField(default=0)
    total_price = models.IntegerField(default=0)
    status = models.CharField(choices=[("scheduled","Scheduled"),("completed","Completed"),("cancelled","Cancelled")],default="scheduled")

    class Meta:
        db_table = "appointments"

class AppointmentService(models.Model):
    appointment = models.ForeignKey("appointment.Appointment",on_delete=models.CASCADE)
    service = models.ForeignKey("service.Service",on_delete=models.CASCADE)

    class Meta:
        db_table = "appointment_services"


class Service(models.Model):
    name = models.CharField()
    medspa = models.ForeignKey("medspa.MedSpa",on_delete=models.CASCADE)
    description = models.CharField(max_length=100)
    price = models.IntegerField()
    duration = models.IntegerField()
    
    class Meta:
        db_table = "services"
        constraints = [
            models.UniqueConstraint(fields=['name', 'medspa_id'], name='unique_medspa_services'),
        ]


